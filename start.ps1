# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
$BackendProcess = $null
$FrontendProcess = $null

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ª–æ–≥–æ—Ç–∏–ø–∞
function Show-Logo {
    Clear-Host
    Write-Host ""
    Write-Host "‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó" -ForegroundColor Cyan
    Write-Host "‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ –±–µ—Ç–æ–Ω–∞" -ForegroundColor Magenta
    Write-Host ""
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Test-Dependencies {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Blue
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    try {
        $pythonVersion = python --version 2>&1
        if ($LASTEXITCODE -ne 0) {
            throw "Python –Ω–µ –Ω–∞–π–¥–µ–Ω"
        }
        Write-Host "‚úÖ Python –Ω–∞–π–¥–µ–Ω: $pythonVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å python.org" -ForegroundColor Red
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
    try {
        $nodeVersion = node --version 2>&1
        if ($LASTEXITCODE -ne 0) {
            throw "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
        }
        Write-Host "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω: $nodeVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å nodejs.org" -ForegroundColor Red
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º npm
    try {
        $npmVersion = npm --version 2>&1
        if ($LASTEXITCODE -ne 0) {
            throw "npm –Ω–µ –Ω–∞–π–¥–µ–Ω"
        }
        Write-Host "‚úÖ npm –Ω–∞–π–¥–µ–Ω: v$npmVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js" -ForegroundColor Red
        return $false
    }
    
    Write-Host ""
    return $true
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function Initialize-VirtualEnvironment {
    if (-not (Test-Path ".venv")) {
        Write-Host "üì¶ –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..." -ForegroundColor Yellow
        python -m venv .venv
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor Red
            return $false
        }
        Write-Host "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ" -ForegroundColor Green
    }
    return $true
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞
function Install-BackendDependencies {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞..." -ForegroundColor Blue
    
    if (-not (Test-Path "backend\requirements.txt")) {
        Write-Host "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ backend" -ForegroundColor Red
        return $false
    }
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    & ".venv\Scripts\Activate.ps1"
    pip install -r backend\requirements.txt
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞" -ForegroundColor Red
        return $false
    }
    
    deactivate
    Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
    return $true
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
function Install-FrontendDependencies {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..." -ForegroundColor Blue
    
    Push-Location frontend
    try {
        if (-not (Test-Path "package.json")) {
            Write-Host "‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ frontend" -ForegroundColor Red
            return $false
        }
        
        npm install
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞" -ForegroundColor Red
            return $false
        }
        
        Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
        return $true
    }
    finally {
        Pop-Location
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞
function Start-Backend {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä..." -ForegroundColor Blue
    
    $backendPath = Join-Path (Get-Location) "backend"
    $venvActivate = Join-Path (Get-Location) ".venv\Scripts\Activate.ps1"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞
    $backendScript = @"
Set-Location '$backendPath'
& '$venvActivate'
uvicorn main:app --reload --host 0.0.0.0 --port 8000
"@
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
    $global:BackendProcess = Start-Process powershell -ArgumentList "-NoExit", "-Command", $backendScript -PassThru -WindowStyle Normal
    
    Write-Host "‚úÖ –ë—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $($BackendProcess.Id))" -ForegroundColor Green
    return $BackendProcess
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
function Start-Frontend {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä..." -ForegroundColor Blue
    
    $frontendPath = Join-Path (Get-Location) "frontend"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    $frontendScript = @"
Set-Location '$frontendPath'
npm run dev
"@
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
    $global:FrontendProcess = Start-Process powershell -ArgumentList "-NoExit", "-Command", $frontendScript -PassThru -WindowStyle Normal
    
    Write-Host "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $($FrontendProcess.Id))" -ForegroundColor Green
    return $FrontendProcess
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
function Test-ServersReady {
    Write-Host "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤..." -ForegroundColor Yellow
    Start-Sleep -Seconds 3
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥..." -ForegroundColor Blue
    for ($i = 1; $i -le 10; $i++) {
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:8000" -TimeoutSec 5 -ErrorAction Stop
            Write-Host "‚úÖ –ë—ç–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤!" -ForegroundColor Green
            break
        }
        catch {
            Write-Host "‚è≥ –ñ–¥–µ–º –±—ç–∫–µ–Ω–¥... ($i/10)" -ForegroundColor Yellow
            Start-Sleep -Seconds 1
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥..." -ForegroundColor Blue
    for ($i = 1; $i -le 15; $i++) {
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5 -ErrorAction Stop
            Write-Host "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≥–æ—Ç–æ–≤!" -ForegroundColor Green
            break
        }
        catch {
            Write-Host "‚è≥ –ñ–¥–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥... ($i/15)" -ForegroundColor Yellow
            Start-Sleep -Seconds 1
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
function Stop-Servers {
    Write-Host ""
    Write-Host "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã..." -ForegroundColor Yellow
    
    if ($global:BackendProcess -and !$global:BackendProcess.HasExited) {
        try {
            Stop-Process -Id $global:BackendProcess.Id -Force
            Write-Host "‚úÖ –ë—ç–∫–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
        catch {
            Write-Host "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—ç–∫–µ–Ω–¥" -ForegroundColor Yellow
        }
    }
    
    if ($global:FrontendProcess -and !$global:FrontendProcess.HasExited) {
        try {
            Stop-Process -Id $global:FrontendProcess.Id -Force
            Write-Host "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
        catch {
            Write-Host "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥" -ForegroundColor Yellow
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
function Show-Help {
    Write-Host ""
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" -ForegroundColor Cyan
    Write-Host "  .\start.ps1                 - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    Write-Host "  .\start.ps1 -InstallDeps    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    Write-Host "  .\start.ps1 -Help           - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    param(
        [switch]$InstallDeps,
        [switch]$Help
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    Register-EngineEvent -SourceIdentifier PowerShell.Exiting -Action { Stop-Servers }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
    Show-Logo
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if ($Help) {
        Show-Help
        return
    }
    
    if ($InstallDeps) {
        if (-not (Test-Dependencies)) { return }
        if (-not (Initialize-VirtualEnvironment)) { return }
        if (-not (Install-BackendDependencies)) { return }
        if (-not (Install-FrontendDependencies)) { return }
        
        Write-Host ""
        Write-Host "üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ: .\start.ps1" -ForegroundColor Green
        return
    }
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å–∫–∞
    if (-not (Test-Dependencies)) { return }
    
    if (-not (Test-Path ".venv")) {
        Write-Host "‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -ForegroundColor Yellow
        Write-Host "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\start.ps1 -InstallDeps –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" -ForegroundColor Blue
        return
    }
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã
    $backendProc = Start-Backend
    Start-Sleep -Seconds 2  # –î–∞–µ–º –≤—Ä–µ–º—è –±—ç–∫–µ–Ω–¥—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    $frontendProc = Start-Frontend
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
    Test-ServersReady
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    Write-Host ""
    Write-Host "üéâ NeuroBeton —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Green
    Write-Host "üìç –ê–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤:" -ForegroundColor Cyan
    Write-Host "   üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: " -NoNewline -ForegroundColor White
    Write-Host "http://localhost:3000" -ForegroundColor Yellow
    Write-Host "   üîß –ë—ç–∫–µ–Ω–¥:   " -NoNewline -ForegroundColor White
    Write-Host "http://localhost:8000" -ForegroundColor Yellow
    Write-Host "   üìö API Docs: " -NoNewline -ForegroundColor White
    Write-Host "http://localhost:8000/docs" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "üí° –°–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö" -ForegroundColor Magenta
    Write-Host "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –æ–∫–Ω–æ" -ForegroundColor Magenta
    Write-Host ""
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
    $openBrowser = Read-Host "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/n)"
    if ($openBrowser -eq "y" -or $openBrowser -eq "Y") {
        Start-Process "http://localhost:3000"
    }
    
    # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    try {
        Write-Host "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤..." -ForegroundColor Gray
        while ($true) {
            Start-Sleep -Seconds 1
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–∏–≤—ã –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã
            if ($backendProc.HasExited -and $frontendProc.HasExited) {
                break
            }
        }
    }
    finally {
        Stop-Servers
    }
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
param(
    [switch]$InstallDeps,
    [switch]$Help
)

Main -InstallDeps:$InstallDeps -Help:$Help